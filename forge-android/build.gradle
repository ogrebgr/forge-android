buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'maven'
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'


ext {
    forge_android_version = '11.2.1'
}
group = 'com.bolyartech.forge.android'
version = forge_android_version


android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
    }
}


dependencies {
//    api project(':forge-base')
    api 'com.bolyartech.forge:base:7.6.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    androidTestImplementation 'org.mockito:mockito-core:3.3.3'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    implementation 'javax.inject:javax.inject:1'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'javax.annotation:jsr250-api:1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    implementation 'net.sourceforge.streamsupport:streamsupport:1.6.1'
    implementation 'org.slf4j:slf4j-api:1.7.30'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}


signing {
    sign configurations.archives
}


afterEvaluate {
    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.release
                artifact sourcesJar
                artifact javadocJar
                // Define this explicitly if using implementation or api configurations
                pom.withXml {
                    def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                    // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Forge Client Android'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Forge framework client Android'
                url 'https://github.com/ogrebgr/forge-android'

                scm {
                    connection 'scm:git:https://github.com/ogrebgr/forge-android.git'
                    developerConnection 'scm:git:https://github.com/ogrebgr/forge-android.git'
                    url 'https://github.com/ogrebgr/forge-android'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'ogremir'
                        name 'Ognyan Bankov'
                        email 'bankov@bolyartech.com'
                    }
                }
            }
        }
    }
}


archivesBaseName = "forge-android"